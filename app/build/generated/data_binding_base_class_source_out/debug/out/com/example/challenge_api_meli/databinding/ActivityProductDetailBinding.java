// Generated by view binder compiler. Do not edit!
package com.example.challenge_api_meli.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.challenge_api_meli.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityProductDetailBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageView ivFavoriteFoot;

  @NonNull
  public final ImageView ivFavoriteFootSelected;

  @NonNull
  public final ImageView ivFavoriteHead;

  @NonNull
  public final ImageView ivFavoriteSelected;

  @NonNull
  public final ImageView ivProduct;

  @NonNull
  public final ErrorsBinding layoutE;

  @NonNull
  public final LinearLayout linearLayout2;

  @NonNull
  public final LinearLayout linearLayout3;

  @NonNull
  public final LinearLayout linearLayout4;

  @NonNull
  public final LinearLayout ll;

  @NonNull
  public final RelativeLayout relativeLayout;

  @NonNull
  public final RelativeLayout relativeLayout2;

  @NonNull
  public final TextView tvAddFavoriteState;

  @NonNull
  public final TextView tvMediumTitle;

  @NonNull
  public final TextView tvPriceDetail;

  @NonNull
  public final TextView tvSmallTitle;

  private ActivityProductDetailBinding(@NonNull ConstraintLayout rootView,
      @NonNull ImageView ivFavoriteFoot, @NonNull ImageView ivFavoriteFootSelected,
      @NonNull ImageView ivFavoriteHead, @NonNull ImageView ivFavoriteSelected,
      @NonNull ImageView ivProduct, @NonNull ErrorsBinding layoutE,
      @NonNull LinearLayout linearLayout2, @NonNull LinearLayout linearLayout3,
      @NonNull LinearLayout linearLayout4, @NonNull LinearLayout ll,
      @NonNull RelativeLayout relativeLayout, @NonNull RelativeLayout relativeLayout2,
      @NonNull TextView tvAddFavoriteState, @NonNull TextView tvMediumTitle,
      @NonNull TextView tvPriceDetail, @NonNull TextView tvSmallTitle) {
    this.rootView = rootView;
    this.ivFavoriteFoot = ivFavoriteFoot;
    this.ivFavoriteFootSelected = ivFavoriteFootSelected;
    this.ivFavoriteHead = ivFavoriteHead;
    this.ivFavoriteSelected = ivFavoriteSelected;
    this.ivProduct = ivProduct;
    this.layoutE = layoutE;
    this.linearLayout2 = linearLayout2;
    this.linearLayout3 = linearLayout3;
    this.linearLayout4 = linearLayout4;
    this.ll = ll;
    this.relativeLayout = relativeLayout;
    this.relativeLayout2 = relativeLayout2;
    this.tvAddFavoriteState = tvAddFavoriteState;
    this.tvMediumTitle = tvMediumTitle;
    this.tvPriceDetail = tvPriceDetail;
    this.tvSmallTitle = tvSmallTitle;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityProductDetailBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityProductDetailBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_product_detail, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityProductDetailBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.ivFavoriteFoot;
      ImageView ivFavoriteFoot = ViewBindings.findChildViewById(rootView, id);
      if (ivFavoriteFoot == null) {
        break missingId;
      }

      id = R.id.ivFavoriteFootSelected;
      ImageView ivFavoriteFootSelected = ViewBindings.findChildViewById(rootView, id);
      if (ivFavoriteFootSelected == null) {
        break missingId;
      }

      id = R.id.ivFavoriteHead;
      ImageView ivFavoriteHead = ViewBindings.findChildViewById(rootView, id);
      if (ivFavoriteHead == null) {
        break missingId;
      }

      id = R.id.ivFavoriteSelected;
      ImageView ivFavoriteSelected = ViewBindings.findChildViewById(rootView, id);
      if (ivFavoriteSelected == null) {
        break missingId;
      }

      id = R.id.ivProduct;
      ImageView ivProduct = ViewBindings.findChildViewById(rootView, id);
      if (ivProduct == null) {
        break missingId;
      }

      id = R.id.layoutE;
      View layoutE = ViewBindings.findChildViewById(rootView, id);
      if (layoutE == null) {
        break missingId;
      }
      ErrorsBinding binding_layoutE = ErrorsBinding.bind(layoutE);

      id = R.id.linearLayout2;
      LinearLayout linearLayout2 = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout2 == null) {
        break missingId;
      }

      id = R.id.linearLayout3;
      LinearLayout linearLayout3 = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout3 == null) {
        break missingId;
      }

      id = R.id.linearLayout4;
      LinearLayout linearLayout4 = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout4 == null) {
        break missingId;
      }

      id = R.id.ll;
      LinearLayout ll = ViewBindings.findChildViewById(rootView, id);
      if (ll == null) {
        break missingId;
      }

      id = R.id.relativeLayout;
      RelativeLayout relativeLayout = ViewBindings.findChildViewById(rootView, id);
      if (relativeLayout == null) {
        break missingId;
      }

      id = R.id.relativeLayout2;
      RelativeLayout relativeLayout2 = ViewBindings.findChildViewById(rootView, id);
      if (relativeLayout2 == null) {
        break missingId;
      }

      id = R.id.tvAddFavoriteState;
      TextView tvAddFavoriteState = ViewBindings.findChildViewById(rootView, id);
      if (tvAddFavoriteState == null) {
        break missingId;
      }

      id = R.id.tvMediumTitle;
      TextView tvMediumTitle = ViewBindings.findChildViewById(rootView, id);
      if (tvMediumTitle == null) {
        break missingId;
      }

      id = R.id.tvPriceDetail;
      TextView tvPriceDetail = ViewBindings.findChildViewById(rootView, id);
      if (tvPriceDetail == null) {
        break missingId;
      }

      id = R.id.tvSmallTitle;
      TextView tvSmallTitle = ViewBindings.findChildViewById(rootView, id);
      if (tvSmallTitle == null) {
        break missingId;
      }

      return new ActivityProductDetailBinding((ConstraintLayout) rootView, ivFavoriteFoot,
          ivFavoriteFootSelected, ivFavoriteHead, ivFavoriteSelected, ivProduct, binding_layoutE,
          linearLayout2, linearLayout3, linearLayout4, ll, relativeLayout, relativeLayout2,
          tvAddFavoriteState, tvMediumTitle, tvPriceDetail, tvSmallTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
